% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{AdditiveForceArrayPlot}
\alias{AdditiveForceArrayPlot}
\title{Additive force plots for array of explanations}
\usage{
AdditiveForceArrayPlot(
  baseValue,
  explanations,
  featureNames,
  outNames = "",
  link = c("identity", "logit"),
  plot_cmap = NULL,
  width = NULL,
  height = NULL
)
}
\arguments{
\item{baseValue}{Baseline for predictions}

\item{explanations}{Named list of explanations containing outValue, simIndex
and named list of features effects and values.}

\item{featureNames}{Optional named list or vector of feature names}

\item{outNames}{Optional target variable name}

\item{link}{Optional link function to use: identity (default) or logit}

\item{plot_cmap}{Optional color map to pass to component or list of two valid
web color names or hex codes. Valid color maps are: RdBu, GnPR, CyPU, PkYg,
DrDb, LpLb, YlDp and OrId.}

\item{width}{Optional widget width}

\item{height}{Optional widget height}
}
\description{
Create a force plot widget for multiple explanations
}
\details{
The \code{explanations} parameter should be a list containing named
sublists. Each sublist has the explanation for a sample with \code{outValue}
as the predicted model value, \code{simIndex} as the precomputed similarity
index and another named list called \code{features}, containing \code{effect}
and \code{value}. See example for details.

The feature naming is index-based. The \code{featureNames} parameter can be
a named list or simply a vector of names in order of appearance in the
code{features} list, as in the example below.
}
\examples{
featureNames <- c("A", "B")
outValue_1 <- 0.5
simIndex_1 <- 2
features_1 <- list(
                 list(effect = 0.5, value = 1),
                 list(effect = -0.5, value = 2)
               )
explanation_1 <-
   list(outValue = outValue_1, simIndex = simIndex_1, features = features_1)
outValue_2 <- 0.9
simIndex_2 <- 1
features_2 <- list(
                 list(effect = -0.5, value = 0.5),
                 list(effect = 0.5, value = 3)
               )
explanation_2 <-
   list(outValue = outValue_2, simIndex = simIndex_2, features = features_2)
explanations <- list(explanation_1, explanation_2)
AdditiveForceArrayPlot(0, explanations, featureNames)
}
